/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/
// import * as THREE from 'three'
// import React, { useRef, useState } from 'react'
// import { useLoader } from 'react-three-fiber'
// import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
// import { draco } from 'drei'
// import { a, useSpring } from 'react-spring'

// function Jacket(props) {

//   const group = useRef()
//   const { nodes, materials } = useLoader(GLTFLoader, '/jacketDraco.glb', draco('/draco-gltf/'))

//   const [expand, setExpand] = useState(false);
//   // React spring expand animation
//   const animatedProps = useSpring({
//     scale: expand ? [0.04, 0.04, 0.04] : [0.05, 0.05, 0.05],
//   });

//   return (
//     <group ref={group} {...props} dispose={null} >
//       <a.mesh
//         onClick={() => setExpand(!expand)}
//         material={materials.Material}
//         geometry={nodes.Top.geometry}
//         position={[-5.3, -5, 1.39]}
//         rotation={[Math.PI / 2, 0, 0]}
//         scale={animatedProps.scale}
//       />
//     </group>
//   )
// }

// export default Jacket;

import * as THREE from 'three'
import { draco } from 'drei'
import React, { useRef, useState, useEffect } from 'react'
import { useLoader } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { a, useSpring } from 'react-spring/three'

function Jacket(props) {
  const group = useRef()
  const { nodes, materials } = useLoader(GLTFLoader, '/jacketDraco.glb', draco('/draco-gltf/'))
  const texture = useLoader(THREE.TextureLoader, '/flakes.png')

    const [expand, setExpand] = useState(false);
  // React spring expand animation
  const animatedProps = useSpring({
    hovered: expand ? [0.04, 0.04, 0.04] : [0.05, 0.05, 0.05],
  });

  const [hovered, set] = useState(false)
  useEffect(() => void (document.body.style.cursor = hovered ? 'pointer' : 'auto'), [hovered])

  
  return (
    <group ref={group} {...props} dispose={null}>
          <a.mesh 
            onPointerOver={() => setExpand(!expand)}
            onPointerOut={() => setExpand(expand)}
            // onClick={() => setExpand(!expand)}
            material={materials.Material} 
            geometry={nodes.Top.geometry}
            position={[-5.3, -5, 1.39]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={animatedProps.hovered}
            />
    </group>
  )
}

export default Jacket;